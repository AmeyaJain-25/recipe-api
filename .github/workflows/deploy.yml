name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin

      - name: Create .env file
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_HOSTNAME=${{ secrets.POSTGRES_HOSTNAME }}" >> .env

      - name: Build the Docker image
        run: docker-compose build web

      - name: Verify the Docker image
        run: docker images

      - name: Tag the Docker image
        run: |
          IMAGE_ID=$(docker images -q web:latest)
          echo "Image ID: $IMAGE_ID"
          if [ -z "$IMAGE_ID" ]; then
            echo "Image web:latest not found!"
            exit 1
          fi
          docker tag web:latest ${{ secrets.DOCKER_USERNAME }}/web:latest

      - name: Push the Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/web:latest

  start:
    runs-on: self-hosted
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo $DOCKER_PASSWORD | sudo docker login --username $DOCKER_USERNAME --password-stdin

      - name: Pull the Docker image
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/web:latest

      - name: Create .env file
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_HOSTNAME=${{ secrets.POSTGRES_HOSTNAME }}" >> .env

      - name: Run the Docker image with compose in detached mode
        run: sudo docker-compose up -d

      - name: Check the Docker container
        run: sudo docker ps

      - name: Log latest data
        run: sudo docker logs web
